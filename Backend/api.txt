# 1. Upload Invoice Template
curl -X POST http://localhost:5000/api/invoice/template/upload \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>" \
-F "file=@/path/to/your/file.jpg"

# 2. Create a New Invoice
curl -X POST http://localhost:5000/api/invoice/create \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>" \
-H "Content-Type: application/json" \
-d '{
  "user": "64f1a2b3c7e6d8a9b4c5d6e7",
  "items": [
    {
      "name": "Item 1",
      "quantity": 2,
      "price": 100,
      "total": 200
    },
    {
      "name": "Item 2",
      "quantity": 1,
      "price": 50,
      "total": 50
    }
  ],
  "totalAmount": 250,
  "tax": 25,
  "discount": 10,
  "grandTotal": 265,
  "coverImages": ["https://res.cloudinary.com/your-cloud-name/image/upload/v1234567890/sample.jpg"],
  "template": "https://res.cloudinary.com/your-cloud-name/image/upload/v1234567890/template.jpg",
  "description": "Sample invoice for testing"
}'

# 3. Get Invoice by ID
curl -X GET http://localhost:5000/api/invoice/64f1a2b3c7e6d8a9b4c5d6e7 \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>"

# 4. Get Invoices by User ID
curl -X GET http://localhost:5000/api/invoice/user/64f1a2b3c7e6d8a9b4c5d6e7 \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>"

# 5. Search Invoices
curl -X GET "http://localhost:5000/api/invoice/search?user=64f1a2b3c7e6d8a9b4c5d6e7&status=Paid&startDate=2023-01-01&endDate=2023-12-31" \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>"

# 6. Update Invoice
curl -X PUT http://localhost:5000/api/invoice/64f1a2b3c7e6d8a9b4c5d6e7 \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>" \
-H "Content-Type: application/json" \
-d '{
  "status": "Paid",
  "description": "Updated invoice description"
}'

# 7. Delete Invoice
curl -X DELETE http://localhost:5000/api/invoice/64f1a2b3c7e6d8a9b4c5d6e7 \
-H "Authorization: Bearer <YOUR_JWT_TOKEN>"